version: "3.8"

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.2.1
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:7.2.1
    container_name: kafka
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
    depends_on:
      - zookeeper
  kafka2:
    image: confluentinc/cp-kafka:7.2.1
    container_name: kafka2
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka2:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
    depends_on:
      - zookeeper
  kafka3:
    image: confluentinc/cp-kafka:7.2.1
    container_name: kafka3
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka3:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
    depends_on:
      - zookeeper

  kafka4:
    image: confluentinc/cp-kafka:7.2.1
    container_name: kafka4
    environment:
      KAFKA_BROKER_ID: 4
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka4:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
    depends_on:
      - zookeeper

  kafka-init:
    image: confluentinc/cp-kafka:7.2.1
    container_name: kafka-init
    depends_on: [kafka, kafka2, kafka3, kafka4]
    entrypoint: >
      bash -c '
        for i in {1..20}; do
          kafka-topics --bootstrap-server kafka:9092 --list && break
          sleep 5
        done
        kafka-topics --bootstrap-server kafka:9092 \
          --create --if-not-exists \
          --topic reviews \
          --partitions 6 \
          --replication-factor 3
        kafka-topics --bootstrap-server kafka:9092 \
          --create --if-not-exists \
          --topic predicted-reviews \
          --partitions 6 \
          --replication-factor 3
        echo "âœ… Topics ready";
      '
    restart: "no"

  kafdrop:
    image: obsidiandynamics/kafdrop
    container_name: kafdrop
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKER_CONNECT: "kafka:9092,kafka2:9092,kafka3:9092,kafka4:9092"
    depends_on:
      - kafka
      - kafka2
      - kafka3
      - kafka4

  producer:
    build: ./producer
    container_name: producer
    depends_on:
      - kafka-init

  spark-master:
    build: ./spark
    container_name: spark-master
    environment:
      - SPARK_MODE=master
      - SPARK_MASTER_HOST=spark-master
      - MODEL_PATH=/opt/spark-model
    depends_on:
      - kafka
      - mongodb
    ports:
      - "4040:4040"
      - "7077:7077"
      - "8080:8080"
    volumes:
      - ./model:/opt/spark-model:ro
      # - ./data:/data:ro
  spark-worker-1:
    image: bitnami/spark:3.3.2
    container_name: spark-worker-1
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
    depends_on:
      - spark-master
    volumes:
      - ./model:/opt/spark-model:ro
      # - ./data:/data:ro
  spark-worker-2:
    image: bitnami/spark:3.3.2
    container_name: spark-worker-2
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
    depends_on:
      - spark-master
    volumes:
      - ./model:/opt/spark-model:ro
      # - ./data:/data:ro
  spark-worker-3:
    image: bitnami/spark:3.3.2
    container_name: spark-worker-3
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
    depends_on:
      - spark-master
    volumes:
      - ./model:/opt/spark-model:ro
      # - ./data:/data:ro
  spark-worker-4:
    image: bitnami/spark:3.3.2
    container_name: spark-worker-4
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
    depends_on:
      - spark-master
    volumes:
      - ./model:/opt/spark-model:ro
      # - ./data:/data:ro
  spark-worker-5:
    image: bitnami/spark:3.3.2
    container_name: spark-worker-5
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
    depends_on:
      - spark-master
    volumes:
      - ./model:/opt/spark-model:ro
      # - ./data:/data:ro

  mongodb:
    image: mongo:6
    container_name: mongodb
    ports:
      - "27017:27017"

  node:
    build: ./node
    container_name: node
    depends_on:
      - kafka
      - kafka2
      - mongodb
    ports:
      - "5000:5000"

  react:
    build: ./react
    container_name: react
    ports:
      - "3000:3000"
    depends_on:
      - node
